<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8">
    <title>거북잉</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-U1DAWAznBHeqEIlVSCgzq+c9gqGAJn5c/t99JyeKa9xxaYpSvHU5awsuZVVFIhvj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js" integrity="sha384-eMNCOe7tC1doHpGoWe/6oMVemdAVTMs2xqW4mwXrXsW0L84Iytr2wi5v2QjrP/xp" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js" integrity="sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/public/style.css">

<!------------------------------------------------스위치 토글버튼-->
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js"></script>
    <style>
      .switch {
        position: fixed;
        display: inline-block;
        width: 60px;
        height: 34px;
        vertical-align:middle;
      left: calc(50% - 30px);
      top: calc(75% - 17px);
      }
      .switch input {display:none;}
      .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
      }
      .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
      }
      input:checked + .slider {
        background-color: #2196F3;
      }
      input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
      }
      input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
      }
      .slider.round {
        border-radius: 34px;
      }
      .slider.round:before {
        border-radius: 50%;
      }
      p {
        margin:0px;
        display:inline-block;
        font-size:15px;
        font-weight:bold;
      }
    </style>
  </head>



  <body>
    <%- include('nav.html') %>

    <div class="box" style="background: #BDBDBD;">
      <img class="profile" src="../public/images/main.gif">
    </div>

    <div>
      <label class="switch">
        <input type="checkbox">
        <span class="slider round"></span>
      </label>
    </div>
<!------------------------------------------------------------------민감도버튼-->
    <div class="check_box">
      <div class="form-check form-check-inline">
        <input id="sensitivity" onclick="sensityfunc"class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
        <label class="form-check-label" for="inlineRadio1">민감</label>
      </div>
      <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
        <label class="form-check-label" for="inlineRadio2">2둔함</label>
      </div>
    </div>
    
    <script>
      function sensityfunc() {
      a=0;
    };
      const sense=document.querySelector("#sensitivity");
      sense.addEventListener('click',sensityfunc);
    </script>

    <script>
      function sensityfunc() {
      a=0;
    };
      const sense=document.querySelector("#sensitivity");
      sense.addEventListener('click',sensityfunc);
    </script>
    

 
    
    <!--카메라모델!-->
    <!---------------------------------------------------------------------------------------------------------->
    <div>Machine Pose Model</div>
    <div><canvas id="canvas"></canvas></div>
    <div id="label-container"></div>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/pose@0.8/dist/teachablemachine-pose.min.js"></script>
    
    
    <script type="text/javascript">
      var k = 0;
      var time = 0;
      async function onoff(){
        k++;
        if(k%2 !=0){
          var activate = new Audio('../public/audio/activate.mp3');
          activate.play();
          init();
        };
      };
    
      const URL = "https://teachablemachine.withgoogle.com/models/QzeuEtH8T/";
      let model, webcam, ctx, labelContainer, maxPredictions;
      async function init() {
          const modelURL = URL + "model.json";
          const metadataURL = URL + "metadata.json";
          model = await tmPose.load(modelURL, metadataURL);
          maxPredictions = model.getTotalClasses();
          
          const size = 200;
          const flip = true; // whether to flip the webcam
          webcam = new tmPose.Webcam(size, size, flip); // width, height, flip
          await webcam.setup(); // request access to the webcam
          await webcam.play();
          window.requestAnimationFrame(loop);

          const canvas = document.getElementById("canvas");
          canvas.width = size; canvas.height = size;
          ctx = canvas.getContext("2d");
          labelContainer = document.getElementById("label-container");
          for (let i = 0; i < maxPredictions; i++) { // and class labels
              labelContainer.appendChild(document.createElement("div"));
          }
      }

      async function loop(timestamp) {
          if(k%2 == 0){
            count =0;
            var unactivate = new Audio('../public/audio/unactivate.mp3');
                unactivate.play();
                webcam.stop();
            return false;
          }
          webcam.update(); // update the webcam frame
          await predict();
          window.requestAnimationFrame(loop);
      }
      status = "good"
      var count = 0

      async function predict() {
    

          const { pose, posenetOutput } = await model.estimatePose(webcam.canvas);
          const prediction = await model.predict(posenetOutput);

          if(prediction[2].probability.toFixed(2) == 1.00){
            status = "good";
          }

          else if(prediction[1].probability.toFixed(2) >= 0.80){
            if (status == "bad") {
              count++
            }

            if ( count>100 && status == "bad"){
                count = 0;
                status = "good";
                var moveback = new Audio('../public/audio/moveback.mp3');
                time ++;
                //여기서뽑고싶옹

                moveback.play();
              }

            if(status=="good"){
              count==0;
            }    
            status = "bad";
          }



          for (let i = 0; i < maxPredictions; i++) {
              const classPrediction = prediction[i].className + ": " + prediction[i].probability.toFixed(2);
              labelContainer.childNodes[i].innerHTML = classPrediction;
          }
          drawPose(pose);
      }


      function drawPose(pose) {
          if (webcam.canvas) {
              ctx.drawImage(webcam.canvas, 0, 0);
              // draw the keypoints and skeleton
              if (pose) {
                  const minPartConfidence = 0.5;
                  tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);
                  tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);
              }
          }
      }
    </script>

  
    <script>
      var check = $("input[type='checkbox']");
      check.click(function(){
        $("p").toggle(onoff());
      });
    </script>
    <button id ="ididid" onclick="aaa">아아아아</button>

  </body>

  <script>
    function aaa() {
      location.href=`/page2?time=${time}`;
    };
    const aaaaaa=document.querySelector("#ididid");
    aaaaaa.addEventListener('click',aaa);
  </script>


</html>


